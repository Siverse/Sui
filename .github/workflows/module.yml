name: Module

on:
  push:
    branches: [master]
    paths-ignore: ['**/README.md']
  # 添加手动触发支持 [1,6,7](@ref)
  workflow_dispatch:
    inputs:
      build_type:
        description: '构建类型 (all/debug/release)'
        required: false
        default: 'all'

jobs:
  build:
    # 升级至 Ubuntu 24.04 LTS（避免 20.04 于 2025.04 淘汰）[6](@ref)
    runs-on: ubuntu-24.04
    # 支持手动触发参数过滤 [7](@ref)
    if: |
      (!startsWith(github.event.head_commit.message, '[skip ci]')) ||
      (github.event_name == 'workflow_dispatch')

    steps:
      - name: Checkout
        uses: actions/checkout@v4  # 升级至最新版
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      # 合并缓存步骤（移除冗余 v2 缓存）[8](@ref)
      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: gradle-deps-module-${{ hashFiles('**/build.gradle') }}
          restore-keys: gradle-deps

      - name: Install ccache
        run: |
          sudo apt-get install -y ccache
          ccache -o max_size=2G
          ccache -o hash_dir=false

      # 动态构建命令（支持手动触发参数）[7](@ref)
      - name: Build with Gradle
        run: |
          ./gradlew clean
          # 根据参数选择构建任务
          case "${{ github.event.inputs.build_type }}" in
            debug)
              ./gradlew zipRiruDebug zipZygiskDebug
              ;;
            release)
              ./gradlew zipRiruRelease zipZygiskRelease
              ;;
            *)
              ./gradlew zipRiruDebug zipRiruRelease zipZygiskDebug zipZygiskRelease
              ;;
          esac

      - name: Prepare artifact
        if: success()
        id: prepareArtifact
        run: |
          # 简化输出命名逻辑（避免空目录报错）
          [[ -f out/sui-riru-*-release.zip ]] && \
            riruReleaseName=$(basename out/sui-riru-*-release.zip .zip) && \
            unzip -qo out/sui-riru-*-release.zip -d sui-riru-release
          ...（其他类似处理）

      # 动态上传步骤（仅生成文件时上传）[2](@ref)
      - name: Upload Riru release
        if: ${{ steps.prepareArtifact.outputs.riruReleaseName != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.riruReleaseName }}
          path: sui-riru-release/*
